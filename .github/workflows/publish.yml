name: publish
run-name: ${{ github.actor }} is publishing new version of  üöÄ
on: [push]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Publish to Cloudflare Pages
    steps:
      - run: echo "üéâ Starting deployment - triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.12.1'

      - name: Install Project Dependencies
        run: npm ci

      - name: Install Gatsby CLI
        run: npm install -g gatsby-cli

      - name: Display package.json contents
        run: |
          more ${{ github.workspace }}/package.json

      - name: Clean any old files
        run: gatsby clean
      
      - name: Build 
        run: gatsby build

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Set DEPLOY_TO varible
        run: |
          echo "DEPLOY_TO=${{steps.extract_branch.outputs.branch}}" >> $GITHUB_ENV

      - name: Output branch name
        run: |
          echo "branch: ${{steps.extract_branch.outputs.branch}}"
          echo "deploy: ${DEPLOY_TO}"

      - name: Publish to Cloudflare Pages
        id: publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: 0e78699430885c7dca7e77a0edb2ee66
          projectName: kirbymark-dev-me-v1
          directory: public
          branch: ${DEPLOY_TO}
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Page-Action Output
        run: | 
          echo "enviroment: ${{steps.publish.outputs.environment}}"
          echo "url: ${{steps.publish.outputs.url}}"
          echo "alias: ${{steps.publish.outputs.alias}}"
          echo "id: ${{steps.publish.outputs.id}}"

      - run: echo "üçè This job's status is ${{ job.status }}."
